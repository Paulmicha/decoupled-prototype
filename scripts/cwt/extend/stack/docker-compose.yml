version: "3"
services:

  # See https://github.com/wodby/node
  node:
    image: wodby/node:$NODE_TAG
    container_name: "${DC_NS}_node"
    depends_on:
      - "php"
    working_dir: /app/frontend
    command: sh -c 'npm install && npm run ${NODE_RUN_ON_START}'
    volumes:
      - ./app:/app
    labels:
      - 'traefik.backend=${DC_NS}_node'
      - 'traefik.port=3000'
      - 'traefik.frontend.rule=Host:${INSTANCE_DOMAIN}'

  # See https://github.com/wodby/nginx
  nginx:
    image: wodby/nginx:$NGINX_TAG
    container_name: "${DC_NS}_nginx"
    depends_on:
      - php
    environment:
      NGINX_STATIC_OPEN_FILE_CACHE: "off"
      NGINX_ERROR_LOG_LEVEL: debug
      NGINX_BACKEND_HOST: php
      NGINX_VHOST_PRESET: php
      NGINX_SERVER_ROOT: /var/www/html/web
    volumes:
      - ./app/backend:/var/www/html
    labels:
      - 'traefik.backend=${DC_NS}_nginx'
      - 'traefik.port=80'
      - 'traefik.frontend.rule=Host:backend.${INSTANCE_DOMAIN}'

  # See https://github.com/wodby/php
  # See https://github.com/wodby/drupal-php
  php:
    # image: wodby/php:$PHP_TAG
    image: wodby/drupal-php:$PHP_TAG
    depends_on:
      - "postgres"
    environment:
      DB_HOST: $DB_HOST
      DB_DRIVER: $DB_DRIVER
      DB_NAME: $DB_NAME
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      COLUMNS: 80
    volumes:
      - ./app/backend:/var/www/html

  # See https://github.com/hasura/graphql-engine/tree/master/install-manifests/docker-compose
  hasura:
    image: hasura/graphql-engine:v1.0.0-beta.2
    container_name: "${DC_NS}_hasura"
    depends_on:
      - "postgres"
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://$DB_USER:$DB_PASSWORD@$DB_HOST:5432/$DB_NAME
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ADMIN_SECRET: $HASURA_GRAPHQL_ADMIN_SECRET
    labels:
      - 'traefik.backend=${DC_NS}_hasura'
      - 'traefik.port=8080'
      - 'traefik.frontend.rule=Host:backend.${INSTANCE_DOMAIN}'

  # See https://github.com/wodby/postgres
  postgres:
    image: wodby/postgres:$POSTGRES_TAG
    stop_grace_period: 30s
    environment:
      POSTGRES_DB: $DB_NAME
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
    volumes:
      - ./data/db/default:/var/lib/postgresql/data

  redis:
    image: wodby/redis:$REDIS_TAG
